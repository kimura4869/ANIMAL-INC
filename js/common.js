"use strict"; var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }; $(function() { var $btn, $header, $headerRoot, $menu, o; $.initAnchors(); $headerRoot = $('#header-root'); $header = $('#header-root .hgroup'); $menu = $('#global-menu'); $btn = $('a#btn-toggle'); o = { timer: 0, interval: 0, W: 1025 }; $btn.on('click', function(e) { var onScroll; e.preventDefault(); if (!$(this).hasClass('on')) { $menu.y($(window).scrollTop() + 50); $(window).on('scroll.on', onScroll); $('#global-menu').stop().show().animate({ opacity: 1 }, { duration: 500, easing: 'easeOutCubic' }); } else { $(window).off('scroll.on', onScroll); $menu.stop().animate({ opacity: 0 }, { duration: 300, easing: 'easeOutCubic', complete: function() { $header.y($(window).scrollTop()); return $(this).hide(); } }); } $(this).toggleClass('on'); return onScroll = function(e) { if ($(window).scrollTop() + 50 < $menu.y()) { return $menu.y($(window).scrollTop() + 50); } }; }); $(window).on('load resize', function() { if ($(window).width() >= o.W) { $('.cols-two .bg, .cols-four .bg').each(function() { return $(this).children('img').height($(this).height()); }); $menu.y(0); if ($menu.is(':hidden')) { $menu.show().css('opacity', 1); $btn.removeClass('on'); return $header.y(0); } } }); $(window).on('scroll', function() { if ($(window).width() < o.W) { return $header.y($(window).scrollTop()); } else { return $header.y(0); } }); $menu.on('mouseover', function() { if ($(window).width() >= o.W) { return $headerRoot.css('z-index', '99'); } }).on('mouseout', function() { if ($(window).width() >= o.W) { return $headerRoot.css('z-index', '10'); } }); if ($(window).width() < o.W) { $('[class*="spcol-"]').each(function() { var cls, clss, k, len, results; clss = $(this).attr('class').split(' '); results = []; for (k = 0, len = clss.length; k < len; k++) { cls = clss[k]; if (!/spcol\-/.test(cls)) { continue; } results.push($(this).height($(window).width() * parseInt(cls.split('-')[1]) / 100)); } return results; }); } return this; }); (function($) { /* Anchor */ $.initAnchors = function(p) { var _init, _onClick, _scroll, o; o = { scrollSpeed: 1.0, easing: 'easeInOutSine' }; if (p) { $.extend(o, p); } _scroll = function(ty) { var elm, sy; elm = $.support.checkOn ? 'html,body' : 'body'; sy = $(window).scrollTop() - ty; return $(elm).animate({ scrollTop: ty }, (Math.sqrt(Math.abs(sy)) * 10) * o.scrollSpeed, o.easing); }; _onClick = function(e) { var $target, _y; e.preventDefault(); $target = $($(this).attr('href')); _y = 0; if ($target.length > 0) { _y = $target.offset().top; } return _scroll(_y); }; _init = function() { return $('a[href^="#"][href!="#"]').click(_onClick); }; _init(); return this; }; /* initToTop */ $.initToTop = function(p) { var _init, _onScroll, o; o = { marginTop: 200, target: '#totop' }; if (p) { $.extend(o, p); } _onScroll = function(e) { var top; top = $(window).scrollTop(); if (top > o.marginTop) { $(o.target + ':hidden').fadeIn('fast'); } else { $(o.target + ':visible').fadeOut('fast'); } return this; }; _init = function() { $(window).scroll(_onScroll); return _onScroll(); }; _init(); return this; }; $.fn.initImageFade = function() { return $(this).each(function() { return $.fn.eachImageFade($(this)); }); }; $.fn.eachImageFade = function($img) { return $img.hover(function() { return $(this).stop().animate({ opacity: 0.7 }, 50); }, function() { return $(this).stop().animate({ opacity: 0 }, 200); }); }; $.fn.arrangeRowsHeight = function(col) { var $elm, h, li, results; h = 0; if (col <= 1) { return $(this).height('auto'); } li = Math.ceil($(this).length / col); results = []; while (i < li) { while (j < col) { if (i * col + j > $(this).length) { break; } $elm = $($(this)[i * col + j]); $elm.height('auto'); if ($elm.height() > h) { h = $elm.height(); } j++; } results.push(i++); } return results; }; $.detect = { isTouch: function() { return indexOf.call(window, 'ontouchstart') >= 0; }, isModern: function() { var match; match = navigator.userAgent.match(/(MSIE\ )([0-9]+)/); if (match != null) { return parseInt(match[2]) > 8; } return true; }, isSP: function() { return $('#header-nav').is(':visible'); }, isFF: function() { return navigator.userAgent.indexOf('Firefox') >= 0; } }; $.utils = { digit: function(_num, _digit) { var str; str = String(Math.floor(_num)); while (str.length < _digit) { str = '0' + str; } return str; } }; $.initTheater = function() { var $videos, p, switchVideo; $videos = $('#theater-video video'); p = { num: $videos.length, c: -1, duration: 600, cls: 'active' }; switchVideo = function(n) { var $new, old; if (p.c === n) { return; } if (p.c >= 0) { old = $videos[p.c]; if (!old.paused) { old.pause(); } } $new = $($videos[n]); $new.fadeIn(p.duration); $($('#theater nav.thms a')[n]).addClass(p.cls).siblings().removeClass(p.cls); return p.c = n; }; $('#theater nav.np a').on('click', function(e) { var n; e.preventDefault(); n = $(this).index === 0 ? -1 : 1; return switchVideo((p.c + n + p.num) % p.num); }); $('#theater nav.thms a').on('click', function(e) { e.preventDefault(); return switchVideo($(this).index()); }); return this; }; $.initSpace = function(p) { var c, canvas, init, o, refresh, resize, scroll, update; o = { w: $(window).width(), h: $(window).height(), num: 150, r: 2.2, sy: 0, distance: 150, duration: 1000, timer: void 0, isScrolling: false, stars: [] }; if (p != null) { o = $.extend(o, p); } canvas = document.createElement('canvas'); c = canvas.getContext('2d'); canvas.width = $(window).width(); canvas.height = $(window).height(); document.body.appendChild(canvas); init = function() { var i, k, prev, ref, star; for (i = k = 0, ref = o.num - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) { star = { x: Math.random() * o.w, y: Math.random() * o.h, r: Math.random() * (o.r - 0.5) + 0.5, prev: prev }; star.rr = Math.pow(star.r / o.r, 3); prev = star; o.stars.push(star); } $(window).on('resize', resize); return update(); }; refresh = function() { var results, star, time, time_x, time_y; c.fillStyle = 'black'; c.fillRect(0, 0, o.w, o.h); star = o.stars[o.stars.length - 1]; time = new Date().getTime() * 0.0005; time_x = Math.cos(time) * 0.5; time_y = Math.sin(time * 0.45) * 0.5; results = []; while (star.prev) { star.x += star.rr * time_x; star.y += star.rr * time_y; if (o.isScrolling) { star.y += o.sy * star.rr; } if (star.y > o.h) { star.y = 0; } else if (star.y < 0) { star.y = o.h; } if (star.x > o.w) { star.x = 0; } else if (star.x < 0) { star.x = o.w; } c.beginPath(); c.fillStyle = "rgba(255,255,255," + star.r / o.r * 0.7 + ")"; c.arc(star.x, star.y, star.r, 0, Math.PI * 2, true); c.closePath(); c.fill(); star = star.prev; results.push(this); } return results; }; update = function() { if (o.timer) { clearInterval(o.timer); } return o.timer = setInterval(refresh, 50); }; scroll = function(distance) { var ty; if (o.timer != null) { clearInterval(o.timer); } ty = distance * o.distance; o.t = new Date().getTime(); o.p = 0; o.isScrolling = true; o.timer = setInterval(function() { var date; date = new Date(); p = $.easing.easeOutCubic(0, date.getTime() - o.t, 0, 1, o.duration); o.sy = (p - o.p) * ty; o.p = p; refresh(); if (date.getTime() - o.t >= o.duration) { o.sy = o.p = 0; o.isScrolling = false; return update(); } }, 50); return this; }; resize = function(e) { if (o.timer != null) { clearInterval(o.timer); } return o.timer = setTimeout(function() { var star; clearTimeout(o.timer); o.w = $(window).width(); o.h = $(window).height(); canvas.width = o.w; canvas.height = o.h; star = o.stars[o.stars.length - 1]; while (star.prev) { star.x = Math.random() * o.w; star.y = Math.random() * o.h; star = star.prev; this; } return update(); }, 500); }; init(); this.scroll = scroll; return this; }; $.fn.videoBG = function(p) { var $wrapper, _goto, _init, _resize, o, video; $wrapper = $(this); video = $(this).find('video')[0]; o = { vw: 1280, vh: 720, fitWidth: false }; if (p != null) { o = $.extend(o, p); } _resize = function(e) { var s, sh, sw, th, tw, wh, ww, x, y; ww = $(window).width(); wh = $(window).height(); sw = ww / o.vw; sh = wh / o.vh; s = Math.max(sw, sh); if (o.fitWidth) { tw = ww; th = (ww / o.vw) * o.vh; x = 0; y = wh >= th ? (wh - th) * 0.5 | 0 : wh - th; } else { tw = o.vw * s; th = o.vh * s; x = (ww - tw) * 0.5 | 0; y = (wh - th) * 0.5 | 0; } return $(video).css({ 'position': 'absolute', 'width': tw, 'height': th, 'left': x, 'top': y }); }; _init = function() {}; _goto = function() { video.pause(); return video.currentTime = 0; }; _init(); $.fn.extend({ goto: function() { return _goto(); }, play: function() { video.play(); return video.muted = false; }, pause: function() { video.pause(); return video.muted = true; } }); return $(this); }; $.fn.videoModal = function() { var $close, $video, $wrap, close, init, open, video_src; $close = $video = $wrap = void 0; video_src = ''; init = (function(_this) { return function() { return $(_this).each(function() { var src; src = $(this).data('src'); video_src = ''; return $(this).on('click', open); }); }; })(this); open = function(e) { var src; e.preventDefault(); src = $(this).data('src'); video_src = ''; $wrap = $('' + video_src + '').hide(); $video = $wrap.videoBG({ fitWidth: false }); $close = $(''); $wrap.append($close); $('body').append($wrap).css('overflow-y', 'hidden'); $close.on('click', close); return $wrap.fadeIn(500); }; close = function() { $close.off('click', close); return $wrap.fadeOut(300, function() { $close.remove(); $video.goto(); $wrap.remove(); return $('body').css('overflow-y', 'visible'); }); }; init(); console.log('hoge'); return $(this); }; /* $elm.x(); $param {number || string || undefined} _x */ $.fn.extend({ x: function(_x) { if (_x != null) { return $(this).css('left', _x + 'px'); } else { return parseInt($(this).css('left')); } }, y: function(_y) { if (_y != null) { return $(this).css('top', _y + 'px'); } else { return parseInt($(this).css('top')); } }, alpha: function(_alpha) { if (_alpha != null) { return $(this).css('opacity', _alpha); } else { return parseInt($(this).css('opacity')); } }, scale: function(val) { return $(this).css({ 'transform': 'scale(' + val + ',' + val + ')', '-webkit-transform': 'scale(' + val + ',' + val + ')', '-ms-transform': 'scale(' + val + ',' + val + ')' }); }, radius: function(val) { return $(this).css('border-radius', val + 'px'); } }); $.extend(jQuery.easing, { easeInCubic: function(x, t, b, c, d) { return c * (t /= d) * t * t + b; }, easeOutCubic: function(x, t, b, c, d) { return c * ((t = t / d - 1) * t * t + 1) + b; }, easeInOutCubic: function(x, t, b, c, d) { if ((t /= d / 2 < 1)) { return c / 2 * t * t * t + b; } return c / 2 * ((t -= 2) * t * t + 2) + b; }, easeInOutSine: function(x, t, b, c, d) { return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b; }, easeInOutExpo: function(x, t, b, c, d) { if (t === 0) { return b; } if (t === d) { return b + c; } if ((t /= d / 2) < 1) { return c / 2 * Math.pow(2, 10 * (t - 1)) + b; } return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b; } }); return this; })(jQuery);
